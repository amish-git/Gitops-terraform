name:  Drift check and reconcile changes

on:
  workflow_dispatch:
  schedule:
    - cron: '* * * * *' 

jobs:
  check_drift_reconcile:
    name: apply terrafom for drift event
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform format
      run: terraform fmt -check -recursive

    - name: Terraform init
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Terraform validate
      run: terraform validate

    - name: Goto prod workspace
      run: terraform workspace select -or-create prod
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Terraform plan
      id: prod
      run: |
        plan=$(terraform plan)
        if echo "$plan" | grep -q "No changes"; then
          echo "::set-output name=drift_check::false"
        else
          echo "::set-output name=drift_check::true"
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Apply Terraform
      if: steps.prod.outputs.drift_check == 'true'
      run: |
        for i in {1..5}; do
          terraform apply -auto-approve && break || sleep 10
        done
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
